{{ 'first.css' | asset_url | stylesheet_tag }}

<div class="face-analysis-container">
  <div class="face-analysis-card">
    <div class="face-analysis-header">
      <h2 class="face-analysis-title">{{ block.settings.title }}</h2>
      <p class="face-analysis-description">{{ block.settings.description }}</p>
    </div>

    <div class="face-analysis-body">
      <!-- Image preview -->
      <div class="face-analysis-preview">
        <img 
          id="preview-image"
          src="{{ '265x265.png' | asset_url }}" 
          alt="Uploaded Image Preview" 
          width="256"
          height="256" 
          class="preview-image"
        />
        <div class="preview-overlay">
          <p>Image Preview</p>
        </div>
      </div>

      <!-- Upload -->
      <div class="upload-section">
        <input id="picture" type="file" class="hidden-file" accept="image/png, image/jpeg" />
        <button type="button" class="upload-button" onclick="document.getElementById('picture').click()">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-upload">
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
            <polyline points="17 8 12 3 7 8"/>
            <line x1="12" x2="12" y1="3" y2="15"/>
          </svg>
          Upload Image
        </button>
        <p class="upload-note">PNG, JPG, or JPEG up to 10MB.</p>
      </div>

      <!-- Success message -->
      <p id="upload-message" class="upload-message" style="display:none; color:green; font-weight:bold;">
        âœ… Image uploaded successfully!
      </p>

      <!-- Analyze -->
      <button class="analyze-button">Analyze Face</button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const input = document.getElementById('picture');
    const preview = document.getElementById('preview-image');
    const message = document.getElementById('upload-message');

    input.addEventListener('change', function () {
      const file = this.files[0];
      if (file) {
        preview.src = URL.createObjectURL(file);
        message.style.display = 'block'; // Show the message
      }
    });
  });
</script>

{% schema %}
{
  "name": "Face Analysis Block",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Block Title",
      "default": "Face Analysis Extension"
    },
    {
      "type": "text",
      "id": "description",
      "label": "Description",
      "default": "Upload an image to analyze facial features and expressions."
    }
  ]
}
{% endschema %}
