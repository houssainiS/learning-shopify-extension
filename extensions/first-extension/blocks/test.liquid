{{ 'first.css' | asset_url | stylesheet_tag }}

<div class="face-analysis-container">
  <div class="face-analysis-card">
    <div class="face-analysis-header">
      <h2 class="face-analysis-title">{{ block.settings.title }}</h2>
      <p class="face-analysis-description">{{ block.settings.description }}</p>
    </div>

    <div class="face-analysis-body">
      <!-- Image preview -->
      <div class="face-analysis-preview">
        <img 
          id="preview-image"
          src="{{ '265x265.png' | asset_url }}" 
          alt="Uploaded Image Preview" 
          width="256"
          height="256" 
          class="preview-image"
        />
        <div class="preview-overlay">
          <p>Image Preview</p>
        </div>
      </div>

      <!-- Upload -->
      <div class="upload-section">
        <input id="picture" type="file" class="hidden-file" accept="image/png, image/jpeg" />
        <button type="button" class="upload-button" onclick="document.getElementById('picture').click()">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-upload">
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
            <polyline points="17 8 12 3 7 8"/>
            <line x1="12" x2="12" y1="3" y2="15"/>
          </svg>
          Upload Image
        </button>
        <p class="upload-note">PNG, JPG, or JPEG up to 10MB.</p>
      </div>

      <!-- Success / Error message -->
      <p id="upload-message" class="upload-message" style="display:none; font-weight:bold; margin-top: 10px;"></p>

      <!-- Analyze -->
      <button class="analyze-button" disabled id="analyze-btn">Analyze Face</button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const input = document.getElementById('picture');
    const preview = document.getElementById('preview-image');
    const message = document.getElementById('upload-message');
    const analyzeBtn = document.getElementById('analyze-btn');
    let uploadedFile = null;

    input.addEventListener('change', function () {
      const file = this.files[0];
      if (file) {
        preview.src = URL.createObjectURL(file);
        message.style.display = 'none';
        analyzeBtn.disabled = false;
        uploadedFile = file;
      }
    });

    analyzeBtn.addEventListener('click', function () {
      if (!uploadedFile) {
        message.textContent = 'Please upload an image first.';
        message.style.color = 'red';
        message.style.display = 'block';
        return;
      }

      const formData = new FormData();
      formData.append('photo', uploadedFile);

      message.textContent = 'Analyzing image...';
      message.style.color = 'black';
      message.style.display = 'block';
      analyzeBtn.disabled = true;

      fetch('http://localhost:8000/upload/', {  // Adjust URL as needed
        method: 'POST',
        body: formData,
        credentials: 'include', // keep if your Django uses sessions/cookies
      })
      .then(response => response.json())
      .then(data => {
        analyzeBtn.disabled = false;
        if (data.error) {
          message.textContent = 'Error: ' + data.error;
          message.style.color = 'red';
        } else {
          // Show all data returned:
          message.innerHTML = `
            âœ… Image analyzed successfully!<br>
            <strong>Skin Type:</strong> ${data.skin_type}<br>
            <strong>Left Eye Color:</strong> ${data.left_eye_color}<br>
            <strong>Right Eye Color:</strong> ${data.right_eye_color}<br>
            <strong>Acne Level:</strong> ${data.acne_pred} (Confidence: ${(data.acne_confidence * 100).toFixed(1)}%)
          `;
          message.style.color = 'green';

          // Optionally, update preview image with cropped face
          if(data.cropped_face){
            preview.src = data.cropped_face;
          }
        }
      })
      .catch(err => {
        analyzeBtn.disabled = false;
        message.textContent = 'Upload failed. See console for details.';
        message.style.color = 'red';
        console.error(err);
      });
    });
  });
</script>


{% schema %}
{
  "name": "Face Analysis Block",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Block Title",
      "default": "Face Analysis Extension"
    },
    {
      "type": "text",
      "id": "description",
      "label": "Description",
      "default": "Upload an image to analyze facial features and expressions."
    }
  ]
}
{% endschema %}
